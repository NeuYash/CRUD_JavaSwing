/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aed.view;

import com.aed.exceptions.CustomException;
import com.aed.model.Contact_Info;
import com.aed.model.Employee;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yashpawar
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    int id = 1, personId = 0, flag = 0, updel = 1;
    List<Employee> emp = new ArrayList<>();
    String imageString;
    //Pre populated data
    private boolean a = emp.add(new Employee(id++, "Yash Pawar", 24, "Male",
            "2020-12-05",
            "A5", "IKEA", "Developer", new Contact_Info("9822519697", "abc@gmail.com"),
            "./uploads/profileImage/yash.jpeg"));
    private boolean b = emp.add(new Employee(id++, "Piyush Jain", 28, "Male",
            "2021-01-12",
            "A3", "SIEMENS", "Developer", new Contact_Info("2207891155", "bac@gmail.com"),
            "./uploads/profileImage/piyush.jpeg"));
    private boolean c = emp.add(new Employee(id++, "Nikunj Doshi", 30, "Male",
            "2015-10-23",
            "M2", "CISCO", "Manager", new Contact_Info("9579971845", "ias122@gmail.com"),
            "./uploads/profileImage/nikunj.jpeg"));
    private boolean d = emp.add(new Employee(id++, "Harshila Jagtap", 27, "Female",
            "2017-02-20",
            "A9", "Infosys", "Consultant", new Contact_Info("6172387744", "prem@gmail.com"),
            "./uploads/profileImage/harshila.jpeg"));
    private boolean e = emp.add(new Employee(id++, "Rajat Sharma", 32, "Male",
            "2012-02-20",
            "A9", "Mcknsky", "Tech Lead", new Contact_Info("6172387724", "Rajat@gmail.com"),
            "./uploads/profileImage/Rajat.jpeg"));

    public MainFrame() {
        initComponents();
        genderField.setEditable(false); //gender field is taken from combobox, so not editable
        //resetAction();
        setEmployeeTable(emp); //Function that populates pre populated data
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        genderField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        levelField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        teamField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        positionField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        contactField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        ComboBox = new javax.swing.JComboBox<>();
        imgLabel = new javax.swing.JLabel();
        picUpload = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 295, 31));

        nameField.setForeground(new java.awt.Color(204, 204, 204));
        nameField.setText("Enter Name");
        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        jPanel1.add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 295, 31));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Age");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 295, 31));

        ageField.setForeground(new java.awt.Color(204, 204, 204));
        ageField.setText("Enter Age");
        ageField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ageFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageFieldFocusLost(evt);
            }
        });
        ageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFieldActionPerformed(evt);
            }
        });
        ageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageFieldKeyPressed(evt);
            }
        });
        jPanel1.add(ageField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 295, 31));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gender");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 295, 31));

        genderField.setForeground(new java.awt.Color(204, 204, 204));
        genderField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderFieldActionPerformed(evt);
            }
        });
        jPanel1.add(genderField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 128, 31));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Start Date");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 295, 31));

        dateField.setForeground(new java.awt.Color(204, 204, 204));
        dateField.setText("Enter Date(YYYY-MM-DD)");
        dateField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dateFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateFieldFocusLost(evt);
            }
        });
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });
        dateField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFieldKeyPressed(evt);
            }
        });
        jPanel1.add(dateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 295, 31));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Level");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 295, 31));

        levelField.setForeground(new java.awt.Color(204, 204, 204));
        levelField.setText("Enter Level");
        levelField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                levelFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                levelFieldFocusLost(evt);
            }
        });
        levelField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelFieldActionPerformed(evt);
            }
        });
        jPanel1.add(levelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 295, 31));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Team Information");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 295, 31));

        teamField.setForeground(new java.awt.Color(204, 204, 204));
        teamField.setText("Enter Team Information");
        teamField.setToolTipText("");
        teamField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                teamFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                teamFieldFocusLost(evt);
            }
        });
        teamField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamFieldActionPerformed(evt);
            }
        });
        jPanel1.add(teamField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 295, 31));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Position");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 295, 31));

        positionField.setForeground(new java.awt.Color(204, 204, 204));
        positionField.setText("Enter Position");
        positionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                positionFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                positionFieldFocusLost(evt);
            }
        });
        positionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionFieldActionPerformed(evt);
            }
        });
        jPanel1.add(positionField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 295, 31));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Contact Number");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 295, 31));

        contactField.setForeground(new java.awt.Color(204, 204, 204));
        contactField.setText("Enter Contact Number");
        contactField.setToolTipText("");
        contactField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactFieldFocusLost(evt);
            }
        });
        contactField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contactFieldKeyPressed(evt);
            }
        });
        jPanel1.add(contactField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, 295, 31));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Email");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 295, 31));

        emailField.setForeground(new java.awt.Color(204, 204, 204));
        emailField.setText("Enter Email");
        emailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFieldFocusLost(evt);
            }
        });
        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });
        jPanel1.add(emailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, 295, 31));

        ComboBox.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ComboBox.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Not Disclose" }));
        ComboBox.setSelectedIndex(1);
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 210, 140, 31));

        imgLabel.setToolTipText("");
        imgLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(imgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 130, 110));

        picUpload.setForeground(new java.awt.Color(255, 255, 255));
        picUpload.setText("Upload");
        picUpload.setToolTipText("");
        picUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picUploadActionPerformed(evt);
            }
        });
        jPanel1.add(picUpload, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 90, 100, 30));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 14))); // NOI18N
        jPanel3.setLayout(new java.awt.GridLayout(1, 5, 10, 0));

        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        jPanel3.add(submitButton);

        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel3.add(updateButton);

        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel3.add(deleteButton);

        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel3.add(resetButton);

        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel3.add(searchButton);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee's Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 14))); // NOI18N

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(617, 777));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void positionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionFieldActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        resetAction();
    }//GEN-LAST:event_resetButtonActionPerformed

    //function for static validation checking 
    private void validation() throws CustomException {
        //Name Validation
        try {
            if (nameField.getText().equals("")) {
                throw new CustomException("name not entered");
            }
        } catch (CustomException e) { //exception handling
            JOptionPane.showMessageDialog(this, "Please enter name");
            resetAction();
            flag = 1;
        }

        // Age Validation    
        if (flag == 0) {
            try {
                if (ageField.getText().equals("") || !Pattern.matches("[1-9]{1}[0-9]{1}", ageField.getText())) {
                    throw new CustomException("Incorrect age");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Age");
                resetAction();
                flag = 1;
            }
        }

        //GenderField Validation
        if (flag == 0) {
            try {
                String gen = genderField.getText();
                if (gen.equalsIgnoreCase("Male") || gen.equalsIgnoreCase("Female")
                        || gen.equalsIgnoreCase("not disclose")) {
                } else {
                    throw new CustomException("Gender can be Male or Female or dont disclose");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Gender can be Male or Female or dont disclose");
                resetAction();
                flag = 1;
            }
        }
        //Date Validation
        if (flag == 0) {
            try {
                if (Pattern.matches("[1-2]{1}[0-9]{3}-[0-1]{1}[0-9]{1}-[0-3]{1}[0-9]{1}", dateField.getText()) == false) {
                    throw new CustomException("Incorrect Date format");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Date Format(YYYY-MM-DD)");
                resetAction();
                flag = 1;
            }
        }
        if (flag == 0) {
            LocalDate date = LocalDate.parse(dateField.getText(), DateTimeFormatter.ofPattern("yyyy-MM-dd"));
            try {
                if (LocalDate.now().compareTo(date) < 0) {  //validation for future date
                    throw new CustomException("Start Date cant be in future");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Start Date in Future");
                resetAction();
                flag = 1;
            }
        }
        //level Field Validation
        if (flag == 0) {
            try {
                if (levelField.getText().equals("")) {
                    throw new CustomException("level not entered");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Please enter level");
                resetAction();
                flag = 1;
            }
        }
        //teamField Validation
        if (flag == 0) {
            try {
                if (teamField.getText().equals("")) {
                    throw new CustomException("team name not entered");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Please enter team name");
                resetAction();
                flag = 1;
            }
        }

        //PositionField Validation
        if (flag == 0) {
            try {
                if (positionField.getText().equals("")) {
                    throw new CustomException("Position not entered");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Please enter Position");
                resetAction();
                flag = 1;
            }
        }

        //Contact Validation
        if (flag == 0) {
            try {
                if (Pattern.matches("[1-9]{1}[0-9]{9}", contactField.getText())) { //number validation
                } else {
                    throw new CustomException("Incorrect Number format");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Incorrect Number format");
                resetAction();
                flag = 1;
            }
        }

        //Email Validation
        if (flag == 0) {
            try {
                if (Pattern.matches("^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$", emailField.getText())) {
                } else {
                    throw new CustomException("Incorrect email format");
                }
            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Incorrect email format");
                resetAction();
                flag = 1;
            }
        }
    }

    //submit button function
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        flag = 0;
        try {
            validation();
        } catch (CustomException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //All Validations passed, can enter Data now
        if (flag == 0) {
            emp.add(new Employee(id++, nameField.getText(), Integer.parseInt(ageField.getText()), genderField.getText(),
                    dateField.getText(), levelField.getText(), teamField.getText(),
                    positionField.getText(), new Contact_Info(contactField.getText(), emailField.getText()), imageString));
            JOptionPane.showMessageDialog(this, "Record submitted");
            resetButtonActionPerformed(evt); // reset button function when submitted
            setEmployeeTable(emp); // new entry added to employee table and displayed
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    //mouseClick function to populated data from table to form.
    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        // TODO add your handling code here:
        updel = 0;
        personId = Integer.parseInt(employeeTable.getValueAt(employeeTable.getSelectedRow(), NORMAL).toString());
        Employee obj = null;
        for (Employee e : emp) {
            if (e.getEmployeeID() == personId) {
                obj = e;
            }
        }
        nameField.setForeground(Color.white);
        nameField.setText(obj.getName());
        ageField.setForeground(Color.white);
        ageField.setText(obj.getAge() + "");
        genderField.setForeground(Color.white);
        genderField.setText(obj.getGender());
        dateField.setForeground(Color.white);
        dateField.setText(obj.getStart_date());
        levelField.setForeground(Color.white);
        levelField.setText(obj.getLevel());
        teamField.setForeground(Color.white);
        teamField.setText(obj.getTeam_info());
        positionField.setForeground(Color.white);
        positionField.setText(obj.getPosition_title());
        contactField.setForeground(Color.white);
        contactField.setText(obj.getContact_Info().getCellphone_number());
        emailField.setForeground(Color.white);
        emailField.setText(obj.getContact_Info().getEmail());
        imgLabel.setIcon(new ImageIcon(new ImageIcon(obj.getPhoto()).getImage().getScaledInstance(imgLabel.getWidth(), imgLabel.getHeight(), Image.SCALE_SMOOTH)));
    }//GEN-LAST:event_employeeTableMouseClicked

    //update action 
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        Employee employee = null;
        flag = 0;
        int counter = 0;
        if (updel == 0) {
            try {
                validation();
            } catch (CustomException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (flag == 0) {
                if (personId != 0) {
                    // add validation, one of the field must be changed, only then update
                    for (Employee obj : emp) {
                        if (obj.getEmployeeID() == personId) {
                            obj.setEmployeeID(personId);
                            obj.setName(nameField.getText());
                            obj.setAge(Integer.parseInt(ageField.getText()));
                            obj.setGender(genderField.getText());
                            obj.setStart_date(nameField.getText());
                            obj.setLevel(levelField.getText());
                            obj.setTeam_info(teamField.getText());
                            obj.setPosition_title(positionField.getText());
                            obj.getContact_Info().setCellphone_number(contactField.getText());
                            obj.getContact_Info().setEmail(emailField.getText());
                            obj.setPhoto(imageString);
                            employee = obj;
                            break;
                        }//if
                        counter++;
                    }//for
                    emp.remove(counter);
                    emp.add(employee);

                }//if
                JOptionPane.showMessageDialog(this, "Record Updated");
                setEmployeeTable(emp);
                resetAction();
                personId = 0;
            }//if flag=0
        }//if updel
        else {
            JOptionPane.showMessageDialog(this, "Please select Record");
        }

    }//GEN-LAST:event_updateButtonActionPerformed
    //used for sorting elements by id 
    class SortById implements Comparator<Employee> {
// Used for sorting in ascending order of ID  

        public int compare(Employee a, Employee b) {
            return a.getEmployeeID() - b.getEmployeeID();
        }
    }

    //set employee table function to display employee data 
    private void setEmployeeTable(List<Employee> em) {
        int rIndex = 0;
        //DateTimeFormatter dateFormatter3 = DateTimeFormatter.ofPattern("dd-MMM-yyyy");
        String[][] data = new String[em.size()][10];
        Collections.sort(em, new SortById());
        for (Employee e : em) {
            //data[rIndex][0]=String.valueOf(e.getEmployeeID());
            data[rIndex][0] = e.getEmployeeID() + "";
            data[rIndex][1] = e.getName();
            data[rIndex][2] = String.valueOf(e.getAge());
            data[rIndex][3] = e.getGender();
            data[rIndex][4] = e.getStart_date();
            data[rIndex][5] = e.getLevel();
            data[rIndex][6] = e.getTeam_info();
            data[rIndex][7] = e.getPosition_title();
            data[rIndex][8] = e.getContact_Info().getCellphone_number();
            data[rIndex][9] = e.getContact_Info().getEmail();
            rIndex++;
        }

        String[] col = {"ID", "Name", "Age", "Gender", "Start Date", "Level", "Team Information",
            "Position", "Contact Number", "Email"};

        DefaultTableModel model = new DefaultTableModel(data, col);
        employeeTable.setModel(model);
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (updel == 0) {
            if (personId != 0) {
                for (Employee obj : emp) {
                    if (obj.getEmployeeID() == personId) {
                        emp.remove(obj);
                        break;
                    }//if
                }//for
            }//if
            JOptionPane.showMessageDialog(this, "Deleted");
            resetAction();
            setEmployeeTable(emp);
            personId = 0;
        }//if updel
        else {
            JOptionPane.showMessageDialog(this, "Please select Record");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    // combobox for gender
    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed
        // TODO add your handling code here:
        genderField.setText(ComboBox.getSelectedItem().toString());

    }//GEN-LAST:event_ComboBoxActionPerformed

    // search button searches a given text in all fields.
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        // for setEmployeeTable, provide list as an argument
        //so that when we search we can provide our referenced list as an arg
        List<Employee> searchList = new ArrayList<>();
        String search = JOptionPane.showInputDialog("Please enter Keyword to Search");
        for (Employee e : emp) {
            if (e.getName().contains(search) || Integer.toString(e.getAge()).contains(search)
                    || e.getGender().contains(search) || e.getStart_date().contains(search)
                    || Integer.toString(e.getEmployeeID()).contains(search) || e.getLevel().contains(search)
                    || e.getTeam_info().contains(search) || e.getPosition_title().contains(search)
                    || e.getContact_Info().getCellphone_number().contains(search) || e.getContact_Info().getEmail().contains(search)) {
                searchList.add(e);
            }
        }
        setEmployeeTable(searchList);
        /*int flag1 = 0;
        
        if (!nameField.getText().isEmpty()) {
            System.out.println("in name");
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getName().equalsIgnoreCase(nameField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if

        if (!ageField.getText().isEmpty() && flag1 == 0) {
            System.out.println("in age");
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getAge() == Integer.parseInt(ageField.getText())) {
                    searchList.add(e);
                }//foreach
                setEmployeeTable(searchList);
            }//if
        }
        System.out.println("Gender:" + genderField.getText());
        if (!genderField.getText().isEmpty() && flag1 == 0) {
            System.out.println("Gender:" + genderField.getText());
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getGender().equalsIgnoreCase(genderField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
        if (!dateField.getText().isEmpty() && flag1 == 0) {
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getStart_date().equalsIgnoreCase(nameField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
        if (!levelField.getText().isEmpty() && flag1 == 0) {
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getLevel().equalsIgnoreCase(levelField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
        if (!teamField.getText().isEmpty() && flag1 == 0) {
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getTeam_info().equalsIgnoreCase(teamField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
        if (!positionField.getText().isEmpty() && flag1 == 0) {
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getPosition_title().equalsIgnoreCase(positionField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
        if (!contactField.getText().isEmpty() && flag1 == 0) {
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getContact_Info().getCellphone_number().equalsIgnoreCase(contactField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
        if (!emailField.getText().isEmpty() && flag1 == 0) {
            flag1 = 1;
            for (Employee e : emp) {
                if (e.getContact_Info().getEmail().equalsIgnoreCase(emailField.getText())) {
                    searchList.add(e);
                }
            }//foreach
            setEmployeeTable(searchList);
        }//if
         */
    }//GEN-LAST:event_searchButtonActionPerformed
    // picture upload function, will work for all computers as it will pic image from local storage and display
    private void picUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser chose = new JFileChooser();
        FileNameExtensionFilter photoExtFilter = new FileNameExtensionFilter("Picture", "png", "jpg", "jpeg");
        chose.setFileFilter(photoExtFilter);
        //chose.setFileFilter(false);
        int JFileResponse = chose.showOpenDialog(null);
        if (JFileResponse == JFileChooser.APPROVE_OPTION) {
            File file = chose.getSelectedFile();
            try {
                if (file.getName().endsWith("png") || file.getName().endsWith("jpg") || file.getName().endsWith("jpeg")) {
                    imageString = file.getAbsolutePath();
                    imgLabel.setIcon(new ImageIcon(new ImageIcon(file.toString()).getImage().getScaledInstance(imgLabel.getWidth(), imgLabel.getHeight(), Image.SCALE_SMOOTH)));

                } else {
                    throw new CustomException("Invalid photo selected");
                }

            } catch (CustomException e) {
                JOptionPane.showMessageDialog(this, "Please select Valid Image");
            }

        }

        String newPath = "./uploads/profileImage";
        File directory = new File(newPath);
        if (!directory.exists()) { // to check if folder is created
            directory.mkdirs();
        }
        /*New employee pictures are not being stored in the project for space complexity*/
        //            File source=null,destination=null;
//            String extension= filename.substring(filename.lastIndexOf(".")+1);
//            source= new File(filename);
//            System.out.println("Source File:"+filename);
//            destination = new File (newPath+"/"+nameField.getText()+"."+extension);
//            //destination.setWritable(true);
//            Files.copy(source.toPath(),destination.toPath());
//imageString= destination.getAbsolutePath();

    }//GEN-LAST:event_picUploadActionPerformed

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    private void levelFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_levelFieldActionPerformed

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void genderFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderFieldActionPerformed

    private void ageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFieldActionPerformed

    private void teamFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamFieldActionPerformed

    private void resetAction() {
        nameField.setText("Enter Name");
        nameField.setForeground(Color.lightGray);
        ageField.setText("Enter Age");
        ageField.setForeground(Color.lightGray);
        genderField.setText("");
        dateField.setText("Enter Date(YYYY-MM-DD)");
        dateField.setForeground(Color.lightGray);
        levelField.setText("Enter Level");
        levelField.setForeground(Color.lightGray);
        teamField.setText("Enter Team Information");
        teamField.setForeground(Color.lightGray);
        positionField.setText("Enter Position");
        positionField.setForeground(Color.lightGray);
        contactField.setText("Enter Contact Number");
        contactField.setForeground(Color.lightGray);
        emailField.setText("Enter Email");
        emailField.setForeground(Color.lightGray);
        imageString = "";
        imgLabel.setIcon(null);
        ///Users/yashpawar/NetBeansProjects/AedAss2/./uploads/profileImage/Rajat.png
        setEmployeeTable(emp);
    }

    //FocusLost and Gained functions for better looking UI
    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
        // TODO add your handling code here:
        if (nameField.getText().equals("")) {
            nameField.setText("Enter Name");
            nameField.setForeground(Color.PINK);
        }
    }//GEN-LAST:event_nameFieldFocusLost

    private void nameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusGained
        // TODO add your handling code here:
        if (nameField.getText().equals("Enter Name")) {
            nameField.setText("");
        }
        nameField.setForeground(Color.white);
    }//GEN-LAST:event_nameFieldFocusGained

    private void ageFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageFieldFocusGained
        // TODO add your handling code here:
        if (ageField.getText().equals("Enter Age")) {
            ageField.setText("");
        }
        ageField.setForeground(Color.white);
    }//GEN-LAST:event_ageFieldFocusGained

    private void ageFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageFieldFocusLost
        // TODO add your handling code here:
        if (ageField.getText().equals("")) {
            ageField.setText("Enter Age");
            ageField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_ageFieldFocusLost

    private void dateFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFieldFocusGained
        // TODO add your handling code here:
        if (dateField.getText().equals("Enter Date(YYYY-MM-DD)")) {
            dateField.setText("");
        }
        dateField.setForeground(Color.white);
    }//GEN-LAST:event_dateFieldFocusGained

    private void dateFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFieldFocusLost
        // TODO add your handling code here:
        if (dateField.getText().equals("")) {
            dateField.setText("Enter Date(YYYY-MM-DD)");
            dateField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_dateFieldFocusLost

    private void levelFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_levelFieldFocusGained
        // TODO add your handling code here:
        if (levelField.getText().equals("Enter Level")) {
            levelField.setText("");
        }
        levelField.setForeground(Color.white);
    }//GEN-LAST:event_levelFieldFocusGained

    private void levelFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_levelFieldFocusLost
        if (levelField.getText().equals("")) {
            levelField.setText("Enter Level");
            levelField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_levelFieldFocusLost

    private void teamFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_teamFieldFocusGained
        // TODO add your handling code here:
        if (teamField.getText().equals("Enter Team Information")) {
            teamField.setText("");
        }
        teamField.setForeground(Color.white);
    }//GEN-LAST:event_teamFieldFocusGained

    private void teamFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_teamFieldFocusLost
        // TODO add your handling code here:
        if (teamField.getText().equals("")) {
            teamField.setText("Enter Team Information");
            teamField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_teamFieldFocusLost

    private void positionFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_positionFieldFocusGained
        // TODO add your handling code here:
        if (positionField.getText().equals("Enter Position")) {
            positionField.setText("");
        }
        positionField.setForeground(Color.white);
    }//GEN-LAST:event_positionFieldFocusGained

    private void positionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_positionFieldFocusLost
        // TODO add your handling code here:
        if (positionField.getText().equals("")) {
            positionField.setText("Enter Position");
            positionField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_positionFieldFocusLost

    private void contactFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFieldFocusGained
        // TODO add your handling code here:
        if (contactField.getText().equals("Enter Contact Number")) {
            contactField.setText("");
        }
        contactField.setForeground(Color.white);
    }//GEN-LAST:event_contactFieldFocusGained

    private void contactFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactFieldFocusLost
        // TODO add your handling code here:
        if (contactField.getText().equals("")) {
            contactField.setText("Enter Contact Number");
            contactField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_contactFieldFocusLost

    private void emailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusGained
        // TODO add your handling code here:
        if (emailField.getText().equals("Enter Email")) {
            emailField.setText("");
        }
        emailField.setForeground(Color.white);
    }//GEN-LAST:event_emailFieldFocusGained

    private void emailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusLost
        // TODO add your handling code here:
        if (emailField.getText().equals("")) {
            emailField.setText("Enter Email");
            emailField.setForeground(Color.lightGray);
        }
    }//GEN-LAST:event_emailFieldFocusLost
    //Key pressed function for Dynamic validations
    private void ageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            ageField.setEditable(false);
            JOptionPane.showMessageDialog(this, "Age should be a number");
        } else {
        }
        ageField.setEditable(true);
    }//GEN-LAST:event_ageFieldKeyPressed

    private void dateFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            dateField.setEditable(false);
            JOptionPane.showMessageDialog(this, "Date should be a number");
        } else {
        }
        dateField.setEditable(true);
    }//GEN-LAST:event_dateFieldKeyPressed

    private void contactFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactFieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            contactField.setEditable(false);
            JOptionPane.showMessageDialog(this, "Contact should be a number");
        } else {
        }
        contactField.setEditable(true);
    }//GEN-LAST:event_contactFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JTextField ageField;
    private javax.swing.JTextField contactField;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JTable employeeTable;
    private javax.swing.JTextField genderField;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField levelField;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton picUpload;
    private javax.swing.JTextField positionField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField teamField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
